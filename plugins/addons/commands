#!/usr/bin/env bash
set -eo pipefail

QUIET=false

source $(dirname ${BASH_SOURCE[0]})/addons-common.sh


#
# Each line of the ADDONS file is the form "name:id:private"
#
# The combination of the id and the private data is used by the addon to generate the url
#

case "$1" in
  addons)
    if [[ -z $2 || $2 == "-a" ]]; then
      for ADDON in $(ls -d $ADDONS_PATH/*/ | tr '\n' '\0' | xargs -0 -n 1 basename); do
        ADDON_DATA=$DOKKU_ROOT/.addons/$ADDON
        
        if [ -f $ADDON_DATA/enabled ]; then
          echo "$ADDON"
        elif [[ $2 == "-a" ]]; then
          echo "$ADDON (disabled)"
        fi
      done
    else
      check_app $2
      cut -d":" -f1 $ADDONS_FILE | sort
    fi
    ;;
  addons:add)
    check_app $2
    check_addon_enabled $3
    check_addon_unprovisioned

    id_private=$($ADDONS_PATH/$ADDON/provision $APP)

    echo "$ADDON:$id_private" >> $ADDONS_FILE

    ;;

  addons:remove)
    check_app $2
    check_addon $3
    check_addon_provisioned

    key=DOKKU_${ADDON^^}_URL

    $ADDON_ROOT/unprovision $ADDON_ID
    sed -i "/^$ADDON:/d" $ADDONS_FILE
    sed "/^export $key=/d" $ENV_FILE | sort > $ENV_FILE

    ;;

  addons:enable)
    check_addon_disabled $2

    $ADDON_ROOT/enable
    
    touch $ADDON_DATA/enabled

    ;;

  addons:disable)
    check_addon_enabled $2

    # Unprovision all apps
    for APP in $(ls -d $DOKKU_ROOT/*/ | tr '\n' '\0' | xargs -0 -n 1 basename); do
      ADDONS_FILE="$DOKKU_ROOT/$APP/ADDONS"
      ENV_FILE="$DOKKU_ROOT/$APP/ENV"

      touch $ADDONS_FILE
      touch $ENV_FILE

      line=$(grep "^$ADDON:" $ADDONS_FILE) || {
        continue
      }

      id=$(cut -d":" -f2 <<< "$line")
      key=DOKKU_${ADDON^^}_URL

      $ADDON_ROOT/unprovision $id
      sed -i "/^$ADDON:/d" $ADDONS_FILE
      sed "/^export $key=/d" $ENV_FILE | sort > $ENV_FILE
    done

    $ADDONS_PATH/$ADDON/disable

    rm $ADDON_DATA/enabled

    ;;

  addons:url)
    check_app $2
    check_addon $3
    check_addon_provisioned

    $ADDON_ROOT/url $ADDON_ID $ADDON_PRIVATE

    ;;

  help)
    cat && cat<<EOF
    addons [-a]                                     List enabled add-ons. If -a is specified, disabled add-ons are listed as well.
    addons <app>                                    List all add-ons used by an application
    addons:enable <addon>                           Enable an add-on
    addons:disable <addon>                          Disable an add-on (WARNING: may cause data loss)
    addons:add <app> <addon>                        Add an add-on to an application
    addons:remove <app> <addon>                     Remove an add-on from an application (WARNING: may cause data loss)
    addons:url <app> <addon>                        Print the url export by an add-on
EOF

    ;;
esac
cat

